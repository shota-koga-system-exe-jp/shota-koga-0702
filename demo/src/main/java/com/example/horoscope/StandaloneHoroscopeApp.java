package com.example.horoscope;

import com.sun.net.httpserver.HttpServer;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpExchange;
import java.io.*;
import java.net.InetSocketAddress;
import java.nio.charset.StandardCharsets;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.*;
import java.util.stream.Collectors;
import com.example.horoscope.model.Zodiac;
import com.example.horoscope.model.HoroscopeResult;
import com.example.horoscope.service.HoroscopeService;

public class StandaloneHoroscopeApp {
    
    public static void main(String[] args) throws IOException {
        HttpServer server = HttpServer.create(new InetSocketAddress(8080), 0);
        server.createContext("/", new HoroscopeHandler());
        server.createContext("/detail", new DetailHandler());
        server.setExecutor(null);
        System.out.println("ÊòüÂ∫ßÂç†„ÅÑ„Çµ„Éº„Éê„Éº„ÅåËµ∑Âãï„Åó„Åæ„Åó„Åü: http://localhost:8080");
        System.out.println("ÁµÇ‰∫Ü„Åô„Çã„Å´„ÅØ Ctrl+C „ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ");
        server.start();
    }

    static class HoroscopeHandler implements HttpHandler {
        private final HoroscopeService horoscopeService = new HoroscopeService();
        
        @Override
        public void handle(HttpExchange exchange) throws IOException {
            String response = generateHtml();
            exchange.getResponseHeaders().set("Content-Type", "text/html; charset=UTF-8");
            exchange.sendResponseHeaders(200, response.getBytes(StandardCharsets.UTF_8).length);
            OutputStream os = exchange.getResponseBody();
            os.write(response.getBytes(StandardCharsets.UTF_8));
            os.close();
        }

        private String generateHtml() {
            List<HoroscopeResult> horoscopes = horoscopeService.getDailyHoroscope();
            LocalDate today = LocalDate.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyÂπ¥MÊúàdÊó•");
            String todayStr = today.format(formatter);

            StringBuilder html = new StringBuilder();
            html.append("<!DOCTYPE html>\n");
            html.append("<html lang=\"ja\">\n");
            html.append("<head>\n");
            html.append("    <meta charset=\"UTF-8\">\n");
            html.append("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
            html.append("    <title>‰ªäÊó•„ÅÆÊòüÂ∫ßÂç†„ÅÑ</title>\n");
            html.append("    <style>\n");
            html.append("        body { font-family: 'Hiragino Sans', 'Meiryo', sans-serif; margin: 0; padding: 0; background: #000814; color: #e0e0e0; min-height: 100vh; position: relative; overflow-x: hidden; }\n");
            html.append("        #stars-container { position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 0; }\n");
            html.append("        .star { position: absolute; background: white; border-radius: 50%; animation: twinkle 3s ease-in-out infinite; }\n");
            html.append("        .star.bright { box-shadow: 0 0 4px white; }\n");
            html.append("        .star.yellow { background: #ffd60a; box-shadow: 0 0 6px #ffd60a; }\n");
            html.append("        .star.blue { background: #74c0fc; box-shadow: 0 0 4px #74c0fc; }\n");
            html.append("        @keyframes twinkle { 0%, 100% { opacity: 0.3; transform: scale(1); } 50% { opacity: 1; transform: scale(1.2); } }\n");
            html.append("        @keyframes shooting { 0% { transform: translateX(0) translateY(0); opacity: 1; } 100% { transform: translateX(300px) translateY(300px); opacity: 0; } }\n");
            html.append("        .shooting-star { position: absolute; width: 2px; height: 2px; background: white; box-shadow: 0 0 6px 2px white; animation: shooting 1s ease-out; animation-fill-mode: forwards; }\n");
            html.append("        .shooting-star::after { content: ''; position: absolute; top: 0; left: -50px; width: 50px; height: 1px; background: linear-gradient(to left, white, transparent); }\n");
            html.append("        .milky-way { position: fixed; top: -50%; left: -50%; width: 200%; height: 200%; background: radial-gradient(ellipse at center, transparent 0%, transparent 30%, rgba(138, 43, 226, 0.05) 50%, rgba(30, 0, 50, 0.2) 100%); transform: rotate(-30deg); pointer-events: none; z-index: 0; }\n");
            html.append("        .nebula { position: fixed; width: 300px; height: 300px; border-radius: 50%; background: radial-gradient(circle at center, rgba(138, 43, 226, 0.1), transparent 70%); filter: blur(40px); pointer-events: none; z-index: 0; }\n");
            html.append("        .container { max-width: 1200px; margin: 0 auto; padding: 20px; position: relative; z-index: 2; }\n");
            html.append("        h1 { text-align: center; color: #ffd700; margin-bottom: 10px; font-size: 2.5em; text-shadow: 0 0 20px rgba(255, 215, 0, 0.5); }\n");
            html.append("        .date { text-align: center; color: #b8c5d6; margin-bottom: 30px; font-size: 1.2em; }\n");
            html.append("        .horoscope-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 20px; margin-top: 30px; }\n");
            html.append("        .horoscope-card { background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.2); border-radius: 15px; padding: 20px; box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); transition: all 0.3s ease; cursor: pointer; text-decoration: none; color: #e0e0e0; display: block; position: relative; overflow: hidden; }\n");
            html.append("        .horoscope-card::before { content: ''; position: absolute; top: -2px; left: -2px; right: -2px; bottom: -2px; background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent); transform: translateX(-100%); transition: transform 0.6s; }\n");
            html.append("        .horoscope-card:hover { transform: translateY(-5px); box-shadow: 0 12px 40px 0 rgba(31, 38, 135, 0.5); background: rgba(255, 255, 255, 0.15); }\n");
            html.append("        .horoscope-card:hover::before { transform: translateX(100%); }\n");
            html.append("        .zodiac-symbol { position: absolute; top: 10px; right: 10px; font-size: 3em; opacity: 0.3; color: #ffd700; }\n");
            html.append("        .ranking { display: inline-block; width: 50px; height: 50px; line-height: 50px; text-align: center; border-radius: 50%; font-weight: bold; font-size: 1.2em; margin-right: 10px; box-shadow: 0 0 10px rgba(255, 255, 255, 0.3); }\n");
            html.append("        .ranking-1 { background: linear-gradient(135deg, #FFD700, #FFA500); color: #333; box-shadow: 0 0 20px rgba(255, 215, 0, 0.6); }\n");
            html.append("        .ranking-2 { background: linear-gradient(135deg, #C0C0C0, #B8B8B8); color: #333; box-shadow: 0 0 20px rgba(192, 192, 192, 0.6); }\n");
            html.append("        .ranking-3 { background: linear-gradient(135deg, #CD7F32, #B87333); color: white; box-shadow: 0 0 20px rgba(205, 127, 50, 0.6); }\n");
            html.append("        .ranking-4, .ranking-5, .ranking-6 { background: linear-gradient(135deg, #3498db, #2980b9); color: white; }\n");
            html.append("        .ranking-7, .ranking-8, .ranking-9 { background: linear-gradient(135deg, #95a5a6, #7f8c8d); color: white; }\n");
            html.append("        .ranking-10, .ranking-11, .ranking-12 { background: linear-gradient(135deg, #e74c3c, #c0392b); color: white; }\n");
            html.append("        .zodiac-name { display: inline-block; font-size: 1.3em; font-weight: bold; color: #ffd700; margin-bottom: 15px; text-shadow: 0 0 10px rgba(255, 215, 0, 0.3); }\n");
            html.append("        .fortune { margin: 15px 0; line-height: 1.6; color: #d0d0d0; }\n");
            html.append("        .lucky-info { margin-top: 20px; padding-top: 15px; border-top: 1px solid rgba(255, 255, 255, 0.2); }\n");
            html.append("        .lucky-item { display: flex; align-items: center; margin: 8px 0; font-size: 0.95em; }\n");
            html.append("        .lucky-label { font-weight: bold; color: #a0a0a0; margin-right: 10px; min-width: 100px; }\n");
            html.append("        .lucky-value { color: #e0e0e0; }\n");
            html.append("    </style>\n");
            html.append("</head>\n");
            html.append("<body>\n");
            html.append("    <div id=\"stars-container\"></div>\n");
            html.append("    <div class=\"milky-way\"></div>\n");
            html.append("    <div class=\"nebula\" style=\"top: 20%; left: 70%;\"></div>\n");
            html.append("    <div class=\"nebula\" style=\"top: 60%; left: 10%; background: radial-gradient(circle at center, rgba(255, 107, 107, 0.1), transparent 70%);\"></div>\n");
            html.append("    <div class=\"container\">\n");
            html.append("        <h1>üåü ‰ªäÊó•„ÅÆÊòüÂ∫ßÂç†„ÅÑ üåü</h1>\n");
            html.append("        <div class=\"date\">").append(todayStr).append("</div>\n");
            html.append("        <div class=\"horoscope-grid\">\n");

            for (HoroscopeResult horoscope : horoscopes) {
                html.append("            <a href=\"/detail?zodiac=").append(horoscope.getZodiac().name()).append("\" class=\"horoscope-card\">\n");
                html.append("                <span class=\"zodiac-symbol\">").append(horoscope.getZodiac().getSymbol()).append("</span>\n");
                html.append("                <div>\n");
                html.append("                    <span class=\"ranking ranking-").append(horoscope.getRanking()).append("\">").append(horoscope.getRanking()).append("‰Ωç</span>\n");
                html.append("                    <span class=\"zodiac-name\">").append(horoscope.getZodiac().getDisplayName()).append("</span>\n");
                html.append("                </div>\n");
                html.append("                <div class=\"fortune\">").append(horoscope.getFortune()).append("</div>\n");
                html.append("                <div class=\"lucky-info\">\n");
                html.append("                    <div class=\"lucky-item\">\n");
                html.append("                        <span class=\"lucky-label\">„É©„ÉÉ„Ç≠„Éº„Ç¢„Ç§„ÉÜ„É†Ôºö</span>\n");
                html.append("                        <span class=\"lucky-value\">").append(horoscope.getLuckyItem()).append("</span>\n");
                html.append("                    </div>\n");
                html.append("                    <div class=\"lucky-item\">\n");
                html.append("                        <span class=\"lucky-label\">„É©„ÉÉ„Ç≠„Éº„Éä„É≥„Éê„ÉºÔºö</span>\n");
                html.append("                        <span class=\"lucky-value\">").append(horoscope.getLuckyNumber()).append("</span>\n");
                html.append("                    </div>\n");
                html.append("                    <div class=\"lucky-item\">\n");
                html.append("                        <span class=\"lucky-label\">„É©„ÉÉ„Ç≠„Éº„Ç´„É©„ÉºÔºö</span>\n");
                html.append("                        <span class=\"lucky-value\">").append(horoscope.getLuckyColor()).append("</span>\n");
                html.append("                    </div>\n");
                html.append("                </div>\n");
                html.append("            </a>\n");
            }

            html.append("        </div>\n");
            html.append("    </div>\n");
            html.append("    <script>\n");
            html.append("        function createStars() {\n");
            html.append("            const container = document.getElementById('stars-container');\n");
            html.append("            const starCount = 500;\n");
            html.append("            \n");
            html.append("            for (let i = 0; i < starCount; i++) {\n");
            html.append("                const star = document.createElement('div');\n");
            html.append("                star.className = 'star';\n");
            html.append("                \n");
            html.append("                // „É©„É≥„ÉÄ„É†„Å™‰ΩçÁΩÆ\n");
            html.append("                star.style.left = Math.random() * 100 + '%';\n");
            html.append("                star.style.top = Math.random() * 100 + '%';\n");
            html.append("                \n");
            html.append("                // „É©„É≥„ÉÄ„É†„Å™„Çµ„Ç§„Ç∫\n");
            html.append("                const size = Math.random() * 3;\n");
            html.append("                star.style.width = size + 'px';\n");
            html.append("                star.style.height = size + 'px';\n");
            html.append("                \n");
            html.append("                // „É©„É≥„ÉÄ„É†„Å™„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÈÅÖÂª∂\n");
            html.append("                star.style.animationDelay = Math.random() * 3 + 's';\n");
            html.append("                \n");
            html.append("                // ‰∏ÄÈÉ®„ÅÆÊòü„ÇíÊòé„Çã„Åè„Åó„Åü„ÇäËâ≤„Çí‰ªò„Åë„Åü„Çä„Åô„Çã\n");
            html.append("                const rand = Math.random();\n");
            html.append("                if (rand > 0.95) {\n");
            html.append("                    star.classList.add('bright');\n");
            html.append("                } else if (rand > 0.9) {\n");
            html.append("                    star.classList.add('yellow');\n");
            html.append("                } else if (rand > 0.85) {\n");
            html.append("                    star.classList.add('blue');\n");
            html.append("                }\n");
            html.append("                \n");
            html.append("                container.appendChild(star);\n");
            html.append("            }\n");
            html.append("        }\n");
            html.append("        \n");
            html.append("        function createShootingStar() {\n");
            html.append("            const container = document.getElementById('stars-container');\n");
            html.append("            const shootingStar = document.createElement('div');\n");
            html.append("            shootingStar.className = 'shooting-star';\n");
            html.append("            \n");
            html.append("            shootingStar.style.left = Math.random() * 50 + '%';\n");
            html.append("            shootingStar.style.top = Math.random() * 50 + '%';\n");
            html.append("            \n");
            html.append("            container.appendChild(shootingStar);\n");
            html.append("            \n");
            html.append("            setTimeout(() => {\n");
            html.append("                shootingStar.remove();\n");
            html.append("            }, 1000);\n");
            html.append("        }\n");
            html.append("        \n");
            html.append("        createStars();\n");
            html.append("        \n");
            html.append("        // ÊôÇ„ÄÖÊµÅ„ÇåÊòü„Çí‰Ωú„Çã\n");
            html.append("        setInterval(createShootingStar, 5000);\n");
            html.append("    </script>\n");
            html.append("</body>\n");
            html.append("</html>\n");

            return html.toString();
        }
    }
    
    static class DetailHandler implements HttpHandler {
        private final HoroscopeService horoscopeService = new HoroscopeService();
        
        @Override
        public void handle(HttpExchange exchange) throws IOException {
            String query = exchange.getRequestURI().getQuery();
            String zodiacName = null;
            
            if (query != null && query.startsWith("zodiac=")) {
                zodiacName = query.substring(7);
            }
            
            String response;
            if (zodiacName != null) {
                try {
                    Zodiac zodiac = Zodiac.valueOf(zodiacName);
                    response = generateDetailHtml(zodiac);
                } catch (IllegalArgumentException e) {
                    response = generateErrorHtml();
                }
            } else {
                response = generateErrorHtml();
            }
            
            exchange.getResponseHeaders().set("Content-Type", "text/html; charset=UTF-8");
            exchange.sendResponseHeaders(200, response.getBytes(StandardCharsets.UTF_8).length);
            OutputStream os = exchange.getResponseBody();
            os.write(response.getBytes(StandardCharsets.UTF_8));
            os.close();
        }
        
        private String generateDetailHtml(Zodiac zodiac) {
            HoroscopeResult horoscope = horoscopeService.getHoroscopeByZodiac(zodiac);
            LocalDate today = LocalDate.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyÂπ¥MÊúàdÊó•");
            String todayStr = today.format(formatter);
            
            StringBuilder html = new StringBuilder();
            html.append("<!DOCTYPE html>\n");
            html.append("<html lang=\"ja\">\n");
            html.append("<head>\n");
            html.append("    <meta charset=\"UTF-8\">\n");
            html.append("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
            html.append("    <title>").append(horoscope.getZodiac().getDisplayName()).append(" - ‰ªäÊó•„ÅÆË©≥Á¥∞ÈÅãÂã¢</title>\n");
            html.append("    <style>\n");
            html.append("        body { font-family: 'Hiragino Sans', 'Meiryo', sans-serif; margin: 0; padding: 0; background: #000814; color: #e0e0e0; min-height: 100vh; position: relative; overflow-x: hidden; }\n");
            html.append("        #stars-container { position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 0; }\n");
            html.append("        .star { position: absolute; background: white; border-radius: 50%; animation: twinkle 3s ease-in-out infinite; }\n");
            html.append("        .star.bright { box-shadow: 0 0 4px white; }\n");
            html.append("        .star.yellow { background: #ffd60a; box-shadow: 0 0 6px #ffd60a; }\n");
            html.append("        .star.blue { background: #74c0fc; box-shadow: 0 0 4px #74c0fc; }\n");
            html.append("        @keyframes twinkle { 0%, 100% { opacity: 0.3; transform: scale(1); } 50% { opacity: 1; transform: scale(1.2); } }\n");
            html.append("        .milky-way { position: fixed; top: -50%; left: -50%; width: 200%; height: 200%; background: radial-gradient(ellipse at center, transparent 0%, transparent 30%, rgba(138, 43, 226, 0.05) 50%, rgba(30, 0, 50, 0.2) 100%); transform: rotate(-30deg); pointer-events: none; z-index: 0; }\n");
            html.append("        .container { max-width: 800px; margin: 0 auto; padding: 20px; position: relative; z-index: 2; }\n");
            html.append("        .back-link { display: inline-block; margin-bottom: 20px; color: #ffd700; text-decoration: none; font-size: 1.1em; }\n");
            html.append("        .back-link:hover { text-decoration: underline; text-shadow: 0 0 10px rgba(255, 215, 0, 0.5); }\n");
            html.append("        .detail-card { background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.2); border-radius: 15px; padding: 40px; box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); position: relative; }\n");
            html.append("        .zodiac-symbol-large { position: absolute; top: 20px; right: 20px; font-size: 5em; opacity: 0.2; color: #ffd700; }\n");
            html.append("        .header { text-align: center; margin-bottom: 40px; }\n");
            html.append("        .zodiac-title { font-size: 2.5em; color: #ffd700; margin-bottom: 10px; text-shadow: 0 0 20px rgba(255, 215, 0, 0.5); }\n");
            html.append("        .date { color: #b8c5d6; font-size: 1.2em; margin-bottom: 20px; }\n");
            html.append("        .ranking-badge { display: inline-block; width: 80px; height: 80px; line-height: 80px; text-align: center; border-radius: 50%; font-weight: bold; font-size: 2em; margin: 20px 0; box-shadow: 0 0 20px rgba(255, 255, 255, 0.3); }\n");
            html.append("        .ranking-1 { background: linear-gradient(135deg, #FFD700, #FFA500); color: #333; box-shadow: 0 0 30px rgba(255, 215, 0, 0.6); }\n");
            html.append("        .ranking-2 { background: linear-gradient(135deg, #C0C0C0, #B8B8B8); color: #333; box-shadow: 0 0 30px rgba(192, 192, 192, 0.6); }\n");
            html.append("        .ranking-3 { background: linear-gradient(135deg, #CD7F32, #B87333); color: white; box-shadow: 0 0 30px rgba(205, 127, 50, 0.6); }\n");
            html.append("        .ranking-4, .ranking-5, .ranking-6 { background: linear-gradient(135deg, #3498db, #2980b9); color: white; }\n");
            html.append("        .ranking-7, .ranking-8, .ranking-9 { background: linear-gradient(135deg, #95a5a6, #7f8c8d); color: white; }\n");
            html.append("        .ranking-10, .ranking-11, .ranking-12 { background: linear-gradient(135deg, #e74c3c, #c0392b); color: white; }\n");
            html.append("        .fortune-section { margin: 30px 0; }\n");
            html.append("        .section-title { font-size: 1.5em; color: #ffd700; margin-bottom: 15px; font-weight: bold; text-shadow: 0 0 10px rgba(255, 215, 0, 0.3); }\n");
            html.append("        .fortune-text { font-size: 1.2em; line-height: 1.8; color: #d0d0d0; margin-bottom: 30px; }\n");
            html.append("        .detail-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin: 30px 0; }\n");
            html.append("        .detail-item { background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(5px); border: 1px solid rgba(255, 255, 255, 0.2); border-radius: 10px; padding: 20px; text-align: center; cursor: pointer; transition: all 0.3s ease; }\n");
            html.append("        .detail-item:hover { background: rgba(255, 255, 255, 0.15); transform: translateY(-2px); }\n");
            html.append("        .detail-label { font-size: 0.9em; color: #a0a0a0; margin-bottom: 10px; }\n");
            html.append("        .detail-value { font-size: 1.3em; font-weight: bold; color: #ffd700; text-shadow: 0 0 5px rgba(255, 215, 0, 0.3); }\n");
            html.append("        .advice-section { background: rgba(41, 128, 185, 0.2); backdrop-filter: blur(5px); border: 1px solid rgba(41, 128, 185, 0.3); border-radius: 10px; padding: 25px; margin: 30px 0; }\n");
            html.append("        .advice-title { font-size: 1.3em; color: #5dade2; margin-bottom: 15px; font-weight: bold; }\n");
            html.append("        .advice-text { line-height: 1.6; color: #d0d0d0; }\n");
            html.append("        .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.8); }\n");
            html.append("        .modal-content { background: rgba(20, 20, 40, 0.95); backdrop-filter: blur(10px); margin: 10% auto; padding: 30px; border: 1px solid rgba(255, 255, 255, 0.2); border-radius: 15px; width: 80%; max-width: 600px; box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); }\n");
            html.append("        .close { color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer; }\n");
            html.append("        .close:hover { color: #ffd700; }\n");
            html.append("        .modal-title { color: #ffd700; font-size: 1.5em; margin-bottom: 20px; text-align: center; }\n");
            html.append("        .modal-text { color: #d0d0d0; line-height: 1.8; margin-bottom: 15px; }\n");
            html.append("    </style>\n");
            html.append("</head>\n");
            html.append("<body>\n");
            html.append("    <div id=\"stars-container\"></div>\n");
            html.append("    <div class=\"milky-way\"></div>\n");
            html.append("    <div class=\"container\">\n");
            html.append("        <a href=\"/\" class=\"back-link\">‚Üê ‰∏ÄË¶ß„Å´Êàª„Çã</a>\n");
            html.append("        <div class=\"detail-card\">\n");
            html.append("            <span class=\"zodiac-symbol-large\">").append(horoscope.getZodiac().getSymbol()).append("</span>\n");
            html.append("            <div class=\"header\">\n");
            html.append("                <h1 class=\"zodiac-title\">").append(horoscope.getZodiac().getDisplayName()).append("</h1>\n");
            html.append("                <div class=\"date\">").append(todayStr).append("„ÅÆÈÅãÂã¢</div>\n");
            html.append("                <div class=\"date\" style=\"font-size: 1em; color: #a0a0a0; margin-bottom: 10px;\">").append(getZodiacDateRange(horoscope.getZodiac())).append("</div>\n");
            html.append("                <div class=\"ranking-badge ranking-").append(horoscope.getRanking()).append("\">").append(horoscope.getRanking()).append("‰Ωç</div>\n");
            html.append("            </div>\n");
            html.append("            \n");
            html.append("            <div class=\"fortune-section\">\n");
            html.append("                <h2 class=\"section-title\">‰ªäÊó•„ÅÆÈÅãÂã¢</h2>\n");
            html.append("                <p class=\"fortune-text\">").append(horoscope.getFortune()).append("</p>\n");
            html.append("            </div>\n");
            html.append("            \n");
            html.append("            <div class=\"detail-grid\">\n");
            html.append("                <div class=\"detail-item\">\n");
            html.append("                    <div class=\"detail-label\">„É©„ÉÉ„Ç≠„Éº„Ç¢„Ç§„ÉÜ„É†</div>\n");
            html.append("                    <div class=\"detail-value\">").append(horoscope.getLuckyItem()).append("</div>\n");
            html.append("                </div>\n");
            html.append("                <div class=\"detail-item\">\n");
            html.append("                    <div class=\"detail-label\">„É©„ÉÉ„Ç≠„Éº„Éä„É≥„Éê„Éº</div>\n");
            html.append("                    <div class=\"detail-value\">").append(horoscope.getLuckyNumber()).append("</div>\n");
            html.append("                </div>\n");
            html.append("                <div class=\"detail-item\">\n");
            html.append("                    <div class=\"detail-label\">„É©„ÉÉ„Ç≠„Éº„Ç´„É©„Éº</div>\n");
            html.append("                    <div class=\"detail-value\">").append(horoscope.getLuckyColor()).append("</div>\n");
            html.append("                </div>\n");
            html.append("                <div class=\"detail-item\">\n");
            html.append("                    <div class=\"detail-label\">„É©„ÉÉ„Ç≠„Éº„Çø„Ç§„É†</div>\n");
            html.append("                    <div class=\"detail-value\">").append(generateLuckyTime(horoscope.getRanking())).append("</div>\n");
            html.append("                </div>\n");
            html.append("            </div>\n");
            html.append("            \n");
            
            // „É©„É≥„Ç≠„É≥„Ç∞„Å´Âøú„Åò„ÅüË©≥Á¥∞„Å™„Ç¢„Éâ„Éê„Ç§„Çπ„ÇíËøΩÂä†
            String advice = generateAdvice(horoscope.getRanking());
            html.append("            <div class=\"advice-section\">\n");
            html.append("                <h3 class=\"advice-title\">‰ªäÊó•„ÅÆ„Ç¢„Éâ„Éê„Ç§„Çπ</h3>\n");
            html.append("                <p class=\"advice-text\">").append(advice).append("</p>\n");
            html.append("            </div>\n");
            
            // ÂêÑÂàÜÈáé„ÅÆÈÅãÂã¢„ÇíËøΩÂä†
            html.append("            <div class=\"fortune-section\">\n");
            html.append("                <h2 class=\"section-title\">ÂêÑÂàÜÈáé„ÅÆÈÅãÂã¢Ôºà„ÇØ„É™„ÉÉ„ÇØ„ÅßË©≥Á¥∞Ôºâ</h2>\n");
            html.append("                <div class=\"detail-grid\">\n");
            html.append("                    <div class=\"detail-item\" onclick=\"showModal('love', ").append(horoscope.getRanking()).append(")\">\n");
            html.append("                        <div class=\"detail-label\">ÊÅãÊÑõÈÅã</div>\n");
            html.append("                        <div class=\"detail-value\">").append(generateStars(horoscope.getRanking(), "love")).append("</div>\n");
            html.append("                    </div>\n");
            html.append("                    <div class=\"detail-item\" onclick=\"showModal('work', ").append(horoscope.getRanking()).append(")\">\n");
            html.append("                        <div class=\"detail-label\">‰ªï‰∫ãÈÅã</div>\n");
            html.append("                        <div class=\"detail-value\">").append(generateStars(horoscope.getRanking(), "work")).append("</div>\n");
            html.append("                    </div>\n");
            html.append("                    <div class=\"detail-item\" onclick=\"showModal('money', ").append(horoscope.getRanking()).append(")\">\n");
            html.append("                        <div class=\"detail-label\">ÈáëÈÅã</div>\n");
            html.append("                        <div class=\"detail-value\">").append(generateStars(horoscope.getRanking(), "money")).append("</div>\n");
            html.append("                    </div>\n");
            html.append("                    <div class=\"detail-item\" onclick=\"showModal('health', ").append(horoscope.getRanking()).append(")\">\n");
            html.append("                        <div class=\"detail-label\">ÂÅ•Â∫∑ÈÅã</div>\n");
            html.append("                        <div class=\"detail-value\">").append(generateStars(horoscope.getRanking(), "health")).append("</div>\n");
            html.append("                    </div>\n");
            html.append("                </div>\n");
            html.append("            </div>\n");
            
            html.append("        </div>\n");
            html.append("    </div>\n");
            html.append("    \n");
            html.append("    <!-- „É¢„Éº„ÉÄ„É´ -->\n");
            html.append("    <div id=\"fortuneModal\" class=\"modal\">\n");
            html.append("        <div class=\"modal-content\">\n");
            html.append("            <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n");
            html.append("            <h3 class=\"modal-title\" id=\"modalTitle\"></h3>\n");
            html.append("            <p class=\"modal-text\" id=\"modalText\"></p>\n");
            html.append("            <p class=\"modal-text\" id=\"modalAdvice\"></p>\n");
            html.append("        </div>\n");
            html.append("    </div>\n");
            html.append("    \n");
            html.append("    <script>\n");
            html.append("        function createStars() {\n");
            html.append("            const container = document.getElementById('stars-container');\n");
            html.append("            const starCount = 300;\n");
            html.append("            \n");
            html.append("            for (let i = 0; i < starCount; i++) {\n");
            html.append("                const star = document.createElement('div');\n");
            html.append("                star.className = 'star';\n");
            html.append("                \n");
            html.append("                star.style.left = Math.random() * 100 + '%';\n");
            html.append("                star.style.top = Math.random() * 100 + '%';\n");
            html.append("                \n");
            html.append("                const size = Math.random() * 3;\n");
            html.append("                star.style.width = size + 'px';\n");
            html.append("                star.style.height = size + 'px';\n");
            html.append("                \n");
            html.append("                star.style.animationDelay = Math.random() * 3 + 's';\n");
            html.append("                \n");
            html.append("                const rand = Math.random();\n");
            html.append("                if (rand > 0.95) {\n");
            html.append("                    star.classList.add('bright');\n");
            html.append("                } else if (rand > 0.9) {\n");
            html.append("                    star.classList.add('yellow');\n");
            html.append("                } else if (rand > 0.85) {\n");
            html.append("                    star.classList.add('blue');\n");
            html.append("                }\n");
            html.append("                \n");
            html.append("                container.appendChild(star);\n");
            html.append("            }\n");
            html.append("        }\n");
            html.append("        \n");
            html.append("        createStars();\n");
            html.append("        \n");
            html.append("        // „É¢„Éº„ÉÄ„É´Ê©üËÉΩ\n");
            html.append("        function showModal(category, ranking) {\n");
            html.append("            const modal = document.getElementById('fortuneModal');\n");
            html.append("            const title = document.getElementById('modalTitle');\n");
            html.append("            const text = document.getElementById('modalText');\n");
            html.append("            const advice = document.getElementById('modalAdvice');\n");
            html.append("            \n");
            html.append("            const titles = {\n");
            html.append("                love: 'ÊÅãÊÑõÈÅã„ÅÆË©≥Á¥∞',\n");
            html.append("                work: '‰ªï‰∫ãÈÅã„ÅÆË©≥Á¥∞',\n");
            html.append("                money: 'ÈáëÈÅã„ÅÆË©≥Á¥∞',\n");
            html.append("                health: 'ÂÅ•Â∫∑ÈÅã„ÅÆË©≥Á¥∞'\n");
            html.append("            };\n");
            html.append("            \n");
            html.append("            const fortunes = {\n");
            html.append("                love: {\n");
            html.append("                    good: 'ÊÅãÊÑõÈÅã„ÅØÁµ∂Â•ΩË™øÔºÅÁ¥†Êïµ„Å™Âá∫‰ºö„ÅÑ„ÇÑ„ÄÅ„Éë„Éº„Éà„Éä„Éº„Å®„ÅÆÈñ¢‰øÇ„ÅåÊ∑±„Åæ„ÇãÊöóÁ§∫„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÁ©çÊ•µÁöÑ„Å´„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥„ÇíÂèñ„Çã„Åì„Å®„Åß„ÄÅ„Çà„ÇäËâØ„ÅÑÈñ¢‰øÇ„ÇíÁØâ„Åë„Çã„Åß„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    normal: 'ÊÅãÊÑõÈÅã„ÅØÂÆâÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇÁÑ¶„Çâ„ÅöËá™ÁÑ∂‰Ωì„Åß„ÅÑ„Çã„Åì„Å®„ÅåÂ§ßÂàá„Åß„Åô„ÄÇÁõ∏Êâã„ÅÆÊ∞óÊåÅ„Å°„ÇíËÄÉ„Åà„Å™„Åå„ÇâË°åÂãï„Åô„Çã„Å®ËâØ„ÅÑ„Åß„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    bad: 'ÊÅãÊÑõÈÅã„ÅØÂ∞ë„Åó‰ΩéË™ø„Åß„Åô„ÄÇ‰ªä„ÅØËá™ÂàÜÁ£®„Åç„Å´Â∞ÇÂøµ„Åô„ÇãÊôÇÊúü„Åã„ÇÇ„Åó„Çå„Åæ„Åõ„Çì„ÄÇÁÑ¶„Çâ„Åö„ÄÅ„Çø„Ç§„Éü„É≥„Ç∞„ÇíÂæÖ„Å°„Åæ„Åó„Çá„ÅÜ„ÄÇ'\n");
            html.append("                },\n");
            html.append("                work: {\n");
            html.append("                    good: '‰ªï‰∫ãÈÅã„ÅØÊúÄÈ´òÊΩÆÔºÅÊñ∞„Åó„ÅÑ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇÑÊòáÈÄ≤„ÅÆ„ÉÅ„É£„É≥„Çπ„ÅåË®™„Çå„Åù„ÅÜ„Åß„Åô„ÄÇÁ©çÊ•µÁöÑ„Å´ÊåëÊà¶„Åô„Çã„Åì„Å®„Åß„ÄÅÂ§ß„Åç„Å™ÊàêÊûú„ÇíÂæó„Çâ„Çå„Çã„Åß„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    normal: '‰ªï‰∫ãÈÅã„ÅØÈ†ÜË™ø„Åß„Åô„ÄÇ„Ç≥„ÉÑ„Ç≥„ÉÑ„Å®Âä™Âäõ„ÇíÁ∂ö„Åë„Çã„Åì„Å®„Åß„ÄÅÁùÄÂÆü„Å´ÊàêÊûú„Çí‰∏ä„Åí„Çâ„Çå„Åæ„Åô„ÄÇ„ÉÅ„Éº„É†„ÉØ„Éº„ÇØ„ÇíÂ§ßÂàá„Å´„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    bad: '‰ªï‰∫ãÈÅã„ÅØÂ∞ë„ÅóÊ≥®ÊÑè„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ„Éü„Çπ„ÇíÈò≤„Åê„Åü„ÇÅ„ÄÅ„ÅÑ„Å§„ÇÇ‰ª•‰∏ä„Å´ÊÖéÈáç„Å´Ë°åÂãï„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ‰ºëÊÅØ„ÇÇÂ§ßÂàá„Åß„Åô„ÄÇ'\n");
            html.append("                },\n");
            html.append("                money: {\n");
            html.append("                    good: 'ÈáëÈÅã„ÅØÁµ∂Â•ΩË™øÔºÅËá®ÊôÇÂèéÂÖ•„ÇÑÊäïË≥á„ÅÆ„ÉÅ„É£„É≥„Çπ„Åå„ÅÇ„Çä„Åù„ÅÜ„Åß„Åô„ÄÇ„Åü„Å†„Åó„ÄÅ‰Ωø„ÅÑ„Åô„Åé„Å´„ÅØÊ≥®ÊÑè„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    normal: 'ÈáëÈÅã„ÅØÂÆâÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇË®àÁîªÁöÑ„Å™ÊîØÂá∫„ÇíÂøÉ„Åå„Åë„Çã„Åì„Å®„Åß„ÄÅÁùÄÂÆü„Å´Ë≤ØËìÑ„ÇíÂ¢ó„ÇÑ„Åõ„Çã„Åß„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    bad: 'ÈáëÈÅã„ÅØÂ∞ë„Åó‰ΩéË™ø„Åß„Åô„ÄÇË°ùÂãïË≤∑„ÅÑ„ÅØÈÅø„Åë„ÄÅÂøÖË¶Å„Å™„ÇÇ„ÅÆ„Å†„Åë„Å´ÊîØÂá∫„ÇíÁµû„Çä„Åæ„Åó„Çá„ÅÜ„ÄÇ'\n");
            html.append("                },\n");
            html.append("                health: {\n");
            html.append("                    good: 'ÂÅ•Â∫∑ÈÅã„ÅØÁµ∂Â•ΩË™øÔºÅ„Ç®„Éç„É´„ÇÆ„Éº„Å´Ê∫Ä„Å°Ê∫¢„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇÊñ∞„Åó„ÅÑÈÅãÂãï„ÇÑÂÅ•Â∫∑Ê≥ï„ÇíÂßã„ÇÅ„Çã„ÅÆ„Å´ÊúÄÈÅ©„Å™ÊôÇÊúü„Åß„Åô„ÄÇ',\n");
            html.append("                    normal: 'ÂÅ•Â∫∑ÈÅã„ÅØÂÆâÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇË¶èÂâáÊ≠£„Åó„ÅÑÁîüÊ¥ª„ÇíÂøÉ„Åå„Åë„Çã„Åì„Å®„Åß„ÄÅËâØ„ÅÑÁä∂ÊÖã„ÇíÁ∂≠ÊåÅ„Åß„Åç„Çã„Åß„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    bad: 'ÂÅ•Â∫∑ÈÅã„ÅØÂ∞ë„ÅóÊ≥®ÊÑè„ÅåÂøÖË¶Å„Åß„Åô„ÄÇÁÑ°ÁêÜ„Çí„Åõ„Åö„ÄÅÂçÅÂàÜ„Å™‰ºëÊÅØ„ÇíÂèñ„Çã„Åì„Å®„ÇíÂøÉ„Åå„Åë„Åæ„Åó„Çá„ÅÜ„ÄÇ'\n");
            html.append("                }\n");
            html.append("            };\n");
            html.append("            \n");
            html.append("            const advices = {\n");
            html.append("                love: {\n");
            html.append("                    good: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºöËá™‰ø°„ÇíÊåÅ„Å£„Å¶Ë°åÂãï„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ„ÅÇ„Å™„Åü„ÅÆÈ≠ÖÂäõ„ÅåÊúÄÂ§ßÈôê„Å´Áô∫ÊèÆ„Åï„Çå„ÇãÊôÇÊúü„Åß„Åô„ÄÇ',\n");
            html.append("                    normal: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºöÁõ∏Êâã„ÅÆÁ´ãÂ†¥„Å´Á´ã„Å£„Å¶ËÄÉ„Åà„Çã„Åì„Å®„Åß„ÄÅ„Çà„ÇäËâØ„ÅÑÈñ¢‰øÇ„ÇíÁØâ„Åë„Åæ„Åô„ÄÇ',\n");
            html.append("                    bad: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºö‰ªä„ÅØÂÖÖÈõªÊúüÈñì„Å®ËÄÉ„Åà„ÄÅËá™ÂàÜËá™Ë∫´„Å®Âêë„ÅçÂêà„ÅÜÊôÇÈñì„ÇíÂ§ßÂàá„Å´„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ'\n");
            html.append("                },\n");
            html.append("                work: {\n");
            html.append("                    good: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºö„ÉÅ„É£„É≥„Çπ„ÇíÈÄÉ„Åï„Å™„ÅÑ„Çà„ÅÜ„ÄÅ„Ç¢„É≥„ÉÜ„Éä„ÇíÈ´ò„Åè‰øù„Å°„Åæ„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    normal: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºöÂü∫Êú¨„Å´Âø†ÂÆü„Å´„ÄÅ‰∏ÅÂØß„Å™‰ªï‰∫ã„ÇíÂøÉ„Åå„Åë„Çã„Åì„Å®„ÅåÊàêÂäü„Å∏„ÅÆËøëÈÅì„Åß„Åô„ÄÇ',\n");
            html.append("                    bad: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºöÁÑ¶„Çâ„Åö„ÄÅ‰∏Ä„Å§‰∏Ä„Å§Á¢∫ÂÆü„Å´„Åì„Å™„Åó„Å¶„ÅÑ„Åè„Åì„Å®„ÅåÂ§ßÂàá„Åß„Åô„ÄÇ'\n");
            html.append("                },\n");
            html.append("                money: {\n");
            html.append("                    good: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºöËâØ„ÅÑÈÅãÊ∞ó„Åß„Åô„Åå„ÄÅË®àÁîªÁöÑ„Å™Ë≥áÁî£ÈÅãÁî®„ÇíÂøÉ„Åå„Åë„Åæ„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    normal: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºöÂ∞è„Åï„Å™ÁØÄÁ¥Ñ„ÅÆÁ©ç„ÅøÈáç„Å≠„Åå„ÄÅÂ§ß„Åç„Å™ÊàêÊûú„Å´„Å§„Å™„Åå„Çä„Åæ„Åô„ÄÇ',\n");
            html.append("                    bad: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºö‰ªä„ÅØÂÆà„Çä„ÅÆÊôÇÊúü„ÄÇÊñ∞„Åó„ÅÑÊäïË≥á„ÅØÊéß„Åà„ÇÅ„Å´„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ'\n");
            html.append("                },\n");
            html.append("                health: {\n");
            html.append("                    good: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºö„Åì„ÅÆÂ•ΩË™ø„ÇíÁ∂≠ÊåÅ„Åô„Çã„Åü„ÇÅ„ÄÅÁîüÊ¥ªÁøíÊÖ£„ÇíÊï¥„Åà„Åæ„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    normal: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºö„Éê„É©„É≥„Çπ„ÅÆËâØ„ÅÑÈ£ü‰∫ã„Å®ÈÅ©Â∫¶„Å™ÈÅãÂãï„ÇíÂøÉ„Åå„Åë„Åæ„Åó„Çá„ÅÜ„ÄÇ',\n");
            html.append("                    bad: '„Ç¢„Éâ„Éê„Ç§„ÇπÔºö‰Ωì„ÅÆÂ£∞„Å´ËÄ≥„ÇíÂÇæ„Åë„ÄÅÁÑ°ÁêÜ„Çí„Åó„Å™„ÅÑ„Åì„Å®„ÅåÂ§ßÂàá„Åß„Åô„ÄÇ'\n");
            html.append("                }\n");
            html.append("            };\n");
            html.append("            \n");
            html.append("            const level = ranking <= 4 ? 'good' : ranking <= 8 ? 'normal' : 'bad';\n");
            html.append("            \n");
            html.append("            title.textContent = titles[category];\n");
            html.append("            text.textContent = fortunes[category][level];\n");
            html.append("            advice.textContent = advices[category][level];\n");
            html.append("            \n");
            html.append("            modal.style.display = 'block';\n");
            html.append("        }\n");
            html.append("        \n");
            html.append("        function closeModal() {\n");
            html.append("            document.getElementById('fortuneModal').style.display = 'none';\n");
            html.append("        }\n");
            html.append("        \n");
            html.append("        // „É¢„Éº„ÉÄ„É´Â§ñ„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Åü„ÇâÈñâ„Åò„Çã\n");
            html.append("        window.onclick = function(event) {\n");
            html.append("            const modal = document.getElementById('fortuneModal');\n");
            html.append("            if (event.target == modal) {\n");
            html.append("                modal.style.display = 'none';\n");
            html.append("            }\n");
            html.append("        }\n");
            html.append("    </script>\n");
            html.append("</body>\n");
            html.append("</html>\n");
            
            return html.toString();
        }
        
        private String generateAdvice(int ranking) {
            if (ranking <= 3) {
                return "‰ªäÊó•„ÅØÁµ∂Â•ΩË™ø„ÅÆ‰∏ÄÊó•„Åß„ÅôÔºÅÁ©çÊ•µÁöÑ„Å´Ë°åÂãï„Åô„Çã„Åì„Å®„Åß„ÄÅÁ¥†Êô¥„Çâ„Åó„ÅÑÁµêÊûú„ÅåÂæó„Çâ„Çå„Çã„Åß„Åó„Çá„ÅÜ„ÄÇÊñ∞„Åó„ÅÑ„Åì„Å®„Å´„ÉÅ„É£„É¨„É≥„Ç∏„Åô„Çã„ÅÆ„Å´ÊúÄÈÅ©„Å™Êó•„Åß„Åô„ÄÇÂë®„Çä„ÅÆ‰∫∫„Å´„ÇÇÂπ∏ÈÅã„ÇíÂàÜ„Åë„Å¶„ÅÇ„Åí„Åæ„Åó„Çá„ÅÜ„ÄÇ";
            } else if (ranking <= 6) {
                return "ÂÆâÂÆö„Åó„ÅüËâØ„ÅÑÈÅãÊ∞ó„ÅÆÊó•„Åß„Åô„ÄÇÊôÆÊÆµÈÄö„Çä„ÅÆË°åÂãï„ÇíÂøÉ„Åå„Åë„Å™„Åå„Çâ„ÄÅÂ∞ë„ÅóÂÜíÈô∫„Åó„Å¶„Åø„Çã„ÅÆ„ÇÇËâØ„ÅÑ„Åß„Åó„Çá„ÅÜ„ÄÇ‰∫∫ÈñìÈñ¢‰øÇ„ÇíÂ§ßÂàá„Å´„Åô„Çã„Åì„Å®„Åß„ÄÅ„Åï„Çâ„Å´ÈÅãÊ∞ó„Åå‰∏äÊòá„Åó„Åæ„Åô„ÄÇ";
            } else if (ranking <= 9) {
                return "‰ªäÊó•„ÅØÊÖéÈáç„Å´Ë°åÂãï„Åô„Çã„Åì„Å®„ÅåÂ§ßÂàá„Åß„Åô„ÄÇÂ§ß„Åç„Å™Ê±∫Êñ≠„ÅØÈÅø„Åë„ÄÅ„Åò„Å£„Åè„Çä„Å®ËÄÉ„Åà„ÇãÊôÇÈñì„ÇíÊåÅ„Å°„Åæ„Åó„Çá„ÅÜ„ÄÇÂ∞è„Åï„Å™Âπ∏„Åõ„ÇíË¶ã„Å§„Åë„Çã„Åì„Å®„Åß„ÄÅÊ∞óÊåÅ„Å°„ÅåÂâçÂêë„Åç„Å´„Å™„Çä„Åæ„Åô„ÄÇ";
            } else {
                return "‰ªäÊó•„ÅØÂÖÖÈõª„ÅÆÊó•„Å®ËÄÉ„Åà„Åæ„Åó„Çá„ÅÜ„ÄÇÁÑ°ÁêÜ„Çí„Åõ„Åö„ÄÅ„É™„É©„ÉÉ„ÇØ„Çπ„Åó„Å¶ÈÅé„Åî„Åô„Åì„Å®„ÅåÂ§ßÂàá„Åß„Åô„ÄÇÊòéÊó•„Å∏„ÅÆÊ∫ñÂÇôÊúüÈñì„Å®Êçâ„Åà„ÄÅÂøÉË∫´„ÇíÊï¥„Åà„Çã„Åì„Å®„Å´ÈõÜ‰∏≠„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ";
            }
        }
        
        private String generateStars(int ranking, String category) {
            int stars;
            switch (category) {
                case "love":
                    stars = ranking <= 4 ? 5 : ranking <= 8 ? 3 : 2;
                    break;
                case "work":
                    stars = ranking <= 3 ? 5 : ranking <= 7 ? 4 : 2;
                    break;
                case "money":
                    stars = ranking <= 5 ? 4 : ranking <= 9 ? 3 : 2;
                    break;
                case "health":
                    stars = ranking <= 6 ? 4 : ranking <= 10 ? 3 : 2;
                    break;
                default:
                    stars = 3;
            }
            
            StringBuilder result = new StringBuilder();
            for (int i = 0; i < 5; i++) {
                if (i < stars) {
                    result.append("‚òÖ");
                } else {
                    result.append("‚òÜ");
                }
            }
            return result.toString();
        }
        
        private String getZodiacDateRange(Zodiac zodiac) {
            String startMonth = zodiac.getStartMonth() + "Êúà";
            String startDay = zodiac.getStartDay() + "Êó•";
            String endMonth = zodiac.getEndMonth() + "Êúà";
            String endDay = zodiac.getEndDay() + "Êó•";
            
            // Âπ¥„Çí„Åæ„Åü„ÅêÊòüÂ∫ßÔºàÂ±±ÁæäÂ∫ßÔºâ„ÅÆÂ†¥Âêà„ÅÆÁâπÂà•„Å™Âá¶ÁêÜ
            if (zodiac == Zodiac.CAPRICORN) {
                return "12Êúà22Êó• ÔΩû 1Êúà19Êó•Áîü„Åæ„Çå";
            }
            
            return startMonth + startDay + " ÔΩû " + endMonth + endDay + "Áîü„Åæ„Çå";
        }
        
        private String generateLuckyTime(int ranking) {
            String[] times = {
                "7:00ÔΩû9:00", "9:00ÔΩû11:00", "11:00ÔΩû13:00",
                "13:00ÔΩû15:00", "15:00ÔΩû17:00", "17:00ÔΩû19:00",
                "19:00ÔΩû21:00", "21:00ÔΩû23:00", "10:00ÔΩû12:00",
                "14:00ÔΩû16:00", "16:00ÔΩû18:00", "20:00ÔΩû22:00"
            };
            
            // „É©„É≥„Ç≠„É≥„Ç∞„Å´Âü∫„Å•„ÅÑ„Å¶ÊôÇÈñì„ÇíÈÅ∏ÊäûÔºà1‰Ωç„ÅØÊúù„ÄÅ12‰Ωç„ÅØÂ§ú„Å™„Å©Ôºâ
            return times[ranking - 1];
        }
        
        private String generateErrorHtml() {
            StringBuilder html = new StringBuilder();
            html.append("<!DOCTYPE html>\n");
            html.append("<html lang=\"ja\">\n");
            html.append("<head>\n");
            html.append("    <meta charset=\"UTF-8\">\n");
            html.append("    <title>„Ç®„É©„Éº</title>\n");
            html.append("</head>\n");
            html.append("<body>\n");
            html.append("    <h1>„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü</h1>\n");
            html.append("    <p><a href=\"/\">„Éà„ÉÉ„Éó„Éö„Éº„Ç∏„Å´Êàª„Çã</a></p>\n");
            html.append("</body>\n");
            html.append("</html>\n");
            return html.toString();
        }
    }
}